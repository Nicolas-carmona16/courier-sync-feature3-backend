name: CI/CD Backend

on:
  push:
    branches: [main, dev, test-deploy]
  pull_request:
    branches: [main, dev]

env:
  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
  RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/test-deploy'
    defaults:
      run:
        working-directory: ./couriersync-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      
      - name: Build application
        run: ./mvnw clean package -DskipTests
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: couriersync-backend/target/*.jar
          retention-days: 1

  deploy-development:
    name: Deploy to Render (Development)
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test-deploy'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Render (Development)
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": false}' \
            "https://api.render.com/v1/services/${{ secrets.RENDER_DEV_SERVICE_ID }}/deploys"

  deploy-production:
    name: Deploy to Render (Production)
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Render (Production)
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": false}' \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys"
      
      - name: Notify deployment success
        if: success()
        run: |
          echo "ðŸš€ Production deployment successful!"
          echo "Service URL: https://your-service.onrender.com"