spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://ep-twilight-shape-aabh6tvj-pooler.westus3.azure.neon.tech/neondb?sslmode=require}
    username: ${DB_USER:neondb_owner}
    password: ${DB_PASS:npg_AaLhRiv04HTf}

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  graphql:
    graphiql:
      enabled: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8080/realms/tu-realm}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      probes:
        enabled: true

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
  graphql:
    limits:
      max-depth: 25
      max-complexity: 1500

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

# Si necesitas baselinar un entorno vac√≠o UNA sola vez en local:
# flyway:
#   baseline-on-migrate: true

